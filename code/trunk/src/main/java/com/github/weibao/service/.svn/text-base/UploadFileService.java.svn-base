package com.github.weibao.service;

import com.github.weibao.utils.PropertyUtil;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Service;
import org.springframework.web.multipart.MultipartFile;

import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.util.Date;

/**
 * @Create 16/2/20,上午8:17
 * @Author dongzhukai
 */
@Service
public class UploadFileService {

    private Logger logger = LoggerFactory.getLogger(UploadFileService.class);

    public String upload1(MultipartFile multipartFile) throws Exception {
        if (!multipartFile.isEmpty()) {
            //拿到输出流，同时重命名上传的文件
            //FileOutputStream os = new FileOutputStream("/Users/dongzhukai/GitHub/fileserver/" + new Date().getTime() + files[i].getOriginalFilename());
            String path = PropertyUtil.getInstance().getValue("file_server_path");
            String filename = "" + new Date().getTime() + multipartFile.getOriginalFilename().hashCode();
            FileOutputStream os = null;
            FileInputStream in = null;
            try {
                //os = new FileOutputStream(filename);
                os = new FileOutputStream(path + filename);
                //拿到上传文件的输入流
                in = (FileInputStream) multipartFile.getInputStream();

                //以写字节的方式写文件
                int b = 0;
                while ((b = in.read()) != -1) {
                    os.write(b);
                }

                os.flush();
                return filename;
            } catch (Exception e) {
                e.printStackTrace();
            } finally {
                if (null != os) os.close();
                if (null != in) in.close();
            }
        }

        return null;
    }

    public String upload(MultipartFile multipartFile) throws Exception {
        String path = PropertyUtil.getInstance().getValue("file_server_path");
        String originalFilename = multipartFile.getOriginalFilename();
        //重命名上传的文件
        String renameFilename = "" + new Date().getTime() + originalFilename.hashCode();
        upload(path, multipartFile, renameFilename);

        return renameFilename;
    }

    /**
     * 上传文件到指定路径
     * destinationDir 目标路径
     * 2014年6月10日
     */
    public boolean upload(String destinationDir, MultipartFile file, String filename) throws Exception {
        logger.info("文件长度: " + file.getSize());
        logger.info("文件类型: " + file.getContentType());
        logger.info("文件名称: " + file.getName());
        logger.info("文件原名: " + file.getOriginalFilename());
        logger.info("========================================");
        try {
            SaveFileFromInputStream(file.getInputStream(), destinationDir, filename);
            return true;
        } catch (IOException e) {
            logger.info(e.getMessage());
            return false;
        }
    }

    /**
     * 保存文件
     *
     * @param stream
     * @param path
     * @param filename
     * @throws IOException
     */
    private void SaveFileFromInputStream(InputStream stream, String path, String filename)
            throws IOException {
        FileOutputStream outputStream = new FileOutputStream(path + filename);
        int byteCount = 0;
        byte[] bytes = new byte[1024];
        while ((byteCount = stream.read(bytes)) != -1) {
            outputStream.write(bytes, 0, byteCount);
        }
        outputStream.close();
        stream.close();

    }
}
